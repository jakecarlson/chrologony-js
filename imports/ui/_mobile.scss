:root {
  --safe-area-inset-top: 0px;
  --safe-area-inset-x: env(safe-area-inset-left);
}

#status {
  position: fixed;
  z-index: 99999;
  top: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, .85);
  height: constant(safe-area-inset-top);
  height: env(safe-area-inset-top, 0px);
}
//.platform-android #status {
//  height: var(--safe-area-inset-top);
//}

/* if backdrop support: very transparent and blurred */
@supports ((-webkit-backdrop-filter: blur(2rem)) or (backdrop-filter: blur(2em))) {
  #status {
    background-color: rgba(0, 0, 0, .675);
    -webkit-backdrop-filter: blur(2rem);
    backdrop-filter: blur(2rem);
  }
}

.mobile-app {
  padding-top: constant(safe-area-inset-top);
  padding-top: env(safe-area-inset-top, 0px);
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom, 0px);
}
//.platform-android .mobile-app {
//  padding-top: var(--safe-area-inset-top);
//}

#alert {
  top: calc(constant(safe-area-inset-top) + .5rem);
  top: calc(env(safe-area-inset-top, 0px) + .5rem);
}
//.platform-android #alert {
//  top: calc(var(--safe-area-inset-top) + .5rem);
//}

@media (orientation: landscape) {
  .mobile-app > .full-width,
  .mobile-app > .container-fluid
  {
    padding-left: unquote('max(env(safe-area-inset-left), 15px) !important'); // iOS
    padding-right: unquote('max(env(safe-area-inset-right), 15px) !important'); // iOS
  }
}